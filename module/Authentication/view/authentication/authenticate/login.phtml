<div class="card-header pb-0 text-left bg-transparent">
    <h3 class="font-weight-bolder text-info text-gradient">Welcome back</h3>
    <p class="mb-0">Enter your email and password to sign in</p>
</div>
<div id="login" class="card-body">
    <!-- <form role="form"> -->
        <label>Phone or Email </label>
        <div class="mb-3">
            <input type="email" class="form-control" ref="phoneOrEmail" placeholder="Phone or Email" aria-label="Email" aria-describedby="email-addon">
        </div>
        <label>Password</label>
        <div class="mb-3">
            <input type="password" @keyup.enter="login()" class="form-control"ref="password" placeholder="Password" aria-label="Password" aria-describedby="password-addon">
        </div>
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" id="rememberMe" checked="">
            <label class="form-check-label" for="rememberMe">Remember me</label>
        </div>
        <div class="text-center">
            <button type="button" class="btn bg-gradient-info w-100 mt-4 mb-0">Sign in</button>
        </div>
    <!-- </form> -->
</div>

<script>
    const app = Vue.createApp({
        data() {
            return {
                usernameOrEmail: "",
            }
        },
        mounted() {
            this.login();
        },
        methods: {
            login() {
                if (this.$refs.password.value == "" || this.$refs.password.value == "") {
					this.$toast.open({
								message: "Either field cannot be empty",
								type: "error",
								duration: 5000,
								dismissible: true
							})
				} else {
					this.isSubmitting = true;
					let formData = new FormData();
					formData.append("password", this.$refs.password.value);
					formData.append("phoneOrEmail", this.$refs.phoneOrEmail.value);
					axios.post("/login", formData).then(res => {
						if (res.status == 201) {
							//process redirection 
							// make a toast notification 
							this.$toast.open({
								message: "Successfully logged in",
								type: "success",
								duration: 20000,
								dismissible: true
							});
							// console.log(res.data.redirect);
							window.location = res.data.redirect;
						}
						
					}).catch(err => {
						this.$toast.open({
								message: err.response.data.messages,
								type: "error",
								duration: 20000,
								dismissible: true
							})
						
						this.isSubmitting = false;
					});
				}
            }
        },
    })
    app.use(VueToast.ToastPlugin);
    app.mount("#login");
</script>